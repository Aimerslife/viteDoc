import{_ as n,c as s,o as a,a as t}from"./app.10064a06.js";const f='{"title":"\u667A\u80FD\u5408\u7EA6\u5F00\u53D1","description":"\u667A\u80FD\u5408\u7EA6","frontmatter":{"title":"\u667A\u80FD\u5408\u7EA6\u5F00\u53D1","description":"\u667A\u80FD\u5408\u7EA6","date":"2022-05-06T00:00:00.000Z","tags":["\u533A\u5757\u94FE"]},"headers":[{"level":2,"title":"\u4EE3\u7801\u5730\u5740","slug":"\u4EE3\u7801\u5730\u5740"},{"level":2,"title":"\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF","slug":"\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF"},{"level":3,"title":"EVM","slug":"evm"},{"level":3,"title":"\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF","slug":"\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF-1"},{"level":2,"title":"\u8D26\u6237","slug":"\u8D26\u6237"},{"level":2,"title":"Gas","slug":"gas"},{"level":3,"title":"\u5355\u4F4D","slug":"\u5355\u4F4D"},{"level":2,"title":"\u7F51\u7EDC","slug":"\u7F51\u7EDC"},{"level":2,"title":"\u5408\u7EA6\u7684\u7F16\u8BD1\u3001\u90E8\u7F72\u3001\u6D4B\u8BD5","slug":"\u5408\u7EA6\u7684\u7F16\u8BD1\u3001\u90E8\u7F72\u3001\u6D4B\u8BD5"},{"level":3,"title":"1. Remix","slug":"_1-remix"},{"level":3,"title":"2. Truffle","slug":"_2-truffle"},{"level":3,"title":"3. Hardhat","slug":"_3-hardhat"}],"relativePath":"posts/\u667A\u80FD\u5408\u7EA6\u5F00\u53D1.md","lastUpdated":1657026306746}',p={},o=t(`<h2 id="\u4EE3\u7801\u5730\u5740" tabindex="-1">\u4EE3\u7801\u5730\u5740 <a class="header-anchor" href="#\u4EE3\u7801\u5730\u5740" aria-hidden="true">#</a></h2><p><a href="https://github.com/xilibi2003/contract-training-code" target="_blank" rel="noopener noreferrer">dlsq</a></p><h2 id="\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF" tabindex="-1">\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF <a class="header-anchor" href="#\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF" aria-hidden="true">#</a></h2><h3 id="evm" tabindex="-1">EVM <a class="header-anchor" href="#evm" aria-hidden="true">#</a></h3><p>\u667A\u80FD\u5408\u7EA6\u7684\u8FD0\u884C\u73AF\u5883\uFF0C\u662F\u4E00\u4E2A\u865A\u62DF\u673A</p><h3 id="\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF-1" tabindex="-1">\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF <a class="header-anchor" href="#\u4EE5\u592A\u574A\u5BA2\u6237\u7AEF-1" aria-hidden="true">#</a></h3><ol><li>\u5B9A\u4E49\uFF1A\u4E5F\u5C31\u662F EVM \u7684\u8F7D\u4F53\uFF0C\u4E5F\u5C31\u662F\u533A\u5757\u94FE\u7F51\u7EDC\u4E2D\u7684\u8282\u70B9\u7684\u7A0B\u5E8F\uFF0C\u53EA\u8981\u7B26\u5408\u7F51\u7EDC\u89C4\u8303\uFF0C\u4EFB\u4F55\u8BED\u8A00\u90FD\u53EF\u4EE5\u5B9E\u73B0\u5BA2\u6237\u7AEF</li><li>\u5E38\u89C1\u7684\u5BA2\u6237\u7AEF\uFF1AGeth(Go \u5B9E\u73B0)\u3001OpenEthereum(Rust \u5B9E\u73B0)\uFF0C\u901A\u8FC7 RPC \u63D0\u4F9B\u670D\u52A1</li></ol><h2 id="\u8D26\u6237" tabindex="-1">\u8D26\u6237 <a class="header-anchor" href="#\u8D26\u6237" aria-hidden="true">#</a></h2><p>\u672C\u8D28\u90FD\u662F\u4E00\u4E2A 20 \u4E2A\u5B57\u8282\u8868\u793A\u7684\u5730\u5740</p><ol><li><p>\u5916\u90E8\u8D26\u6237\uFF08EOA\uFF09\uFF1A\u7531\u79C1\u94A5\u63A7\u5236\uFF08\u6BD4\u5982\u7528\u6237\u7684\u5730\u5740\uFF09</p></li><li><p>\u5408\u7EA6\u8D26\u6237\uFF1A\u4EE3\u7801\u63A7\u5236\uFF08\u6BD4\u5982\u5408\u7EA6\u4EE3\u7801\u7684\u90E8\u7F72\u5730\u5740\uFF09</p></li></ol><blockquote><p>\u6CE8\u610F\uFF1A\u4EA4\u6613\u53EA\u80FD\u4ECE\u5916\u90E8\u8D26\u53F7\u53D1\u51FA\uFF0C\u5408\u7EA6\u53EA\u80FD\u88AB\u52A8\u6267\u884C\u3002\u5408\u7EA6\u4E4B\u95F4\u7684\u4EA4\u4E92\u79F0\u4E3A\u6D88\u606F\uFF0C\u6240\u6709\u7684 gas \u90FD\u7531\u5916\u90E8\u8D26\u53F7\u652F\u4ED8</p></blockquote><h2 id="gas" tabindex="-1">Gas <a class="header-anchor" href="#gas" aria-hidden="true">#</a></h2><p>GAS \u662F\u4E00\u4E2A\u5DE5\u4F5C\u91CF\u5355\u4F4D\uFF0C\u590D\u6742\u5EA6\u8D8A\u5927\uFF0C\u6240\u9700 gas \u8D8A\u591A\u3002\u8D39\u7528=gas \u6570\u91CF*gas \u5355\u4EF7\uFF08\u4EE5\u592A\u5E01\u8BA1\u4EF7 gwei\uFF09</p><h3 id="\u5355\u4F4D" tabindex="-1">\u5355\u4F4D <a class="header-anchor" href="#\u5355\u4F4D" aria-hidden="true">#</a></h3><ul><li>\u6700\u5C0F\u5355\u4F4D\uFF1AWei</li><li>10^9 Wei = 1 Gwei</li><li>10^12 Wei = 1 Szabo</li><li>10^15 Wei = 1 Finney</li><li>10^18 Wei = 1 Ether</li></ul><h2 id="\u7F51\u7EDC" tabindex="-1">\u7F51\u7EDC <a class="header-anchor" href="#\u7F51\u7EDC" aria-hidden="true">#</a></h2><ol><li><a href="https://cn.etherscan.com/" target="_blank" rel="noopener noreferrer">\u4E3B\u7F51\uFF08\u4EF7\u503C\u7F51\u7EDC\uFF09</a></li><li><a href="https://goerli.etherscan.io/" target="_blank" rel="noopener noreferrer">\u6D4B\u8BD5\u7F51</a></li><li>\u5F00\u53D1\u6A21\u62DF\u7F51\uFF08\u672C\u5730\u73AF\u5883\uFF0C\u4E00\u822C\u5C31\u662F\u501F\u52A9\u5DE5\u5177\u8D77\u865A\u62DF\u673A\uFF09</li></ol><h2 id="\u5408\u7EA6\u7684\u7F16\u8BD1\u3001\u90E8\u7F72\u3001\u6D4B\u8BD5" tabindex="-1">\u5408\u7EA6\u7684\u7F16\u8BD1\u3001\u90E8\u7F72\u3001\u6D4B\u8BD5 <a class="header-anchor" href="#\u5408\u7EA6\u7684\u7F16\u8BD1\u3001\u90E8\u7F72\u3001\u6D4B\u8BD5" aria-hidden="true">#</a></h2><h3 id="_1-remix" tabindex="-1">1. Remix <a class="header-anchor" href="#_1-remix" aria-hidden="true">#</a></h3><p><a href="https://remix.ethereum.org/" target="_blank" rel="noopener noreferrer">\u94FE\u63A5</a></p><p>\u5728contracts\u91CC\u6DFB\u52A0Counter.sol</p><div class="language-sol"><pre><code><span class="token comment">// SPDX-License-Identifier:  MIT</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">Counter</span><span class="token punctuation">{</span>
    <span class="token builtin">uint</span> <span class="token keyword">public</span> counter<span class="token punctuation">;</span>
    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span><span class="token punctuation">{</span>
        counter<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7F16\u8F91\u5668\u5DE6\u4FA7\u9762\u677F\u6709\u6587\u4EF6\u5939\u533A\u57DF\u3001\u641C\u7D22\u533A\u57DF\u3001\u7F16\u8BD1\u533A\u57DF\u3001\u90E8\u7F72\u533A\u57DF\u3002</p><p>\u7F16\u8BD1\u533A\u57DF\u53EF\u9009\u7F16\u8BD1\u5668\u7248\u672C\u3002</p><p>\u90E8\u7F72\u533A\u57DF\u53EF\u9009\u90E8\u7F72\u94FE\uFF0C\u6210\u529F\u540E\u4F1A\u663E\u793A\u90E8\u7F72\u5730\u5740\u3002\u90E8\u7F72\u5408\u7EA6\u4E5F\u662F\u4E00\u7B14\u4EA4\u6613\uFF0C\u9700\u8981\u5728\u94B1\u5305\u786E\u8BA4\uFF0C\u4E5F\u9700\u8981gas\u8D39\u3002\u90E8\u7F72\u6210\u529F\u540E\u4F1A\u663E\u793A\u4EA4\u4E92\u9762\u677F\uFF0C\u6A59\u8272\u662F\u89E6\u53D1\u4EA4\u6613\uFF0C\u84DD\u8272\u4EC5\u8BFB\u53D6\u3002\u70B9\u51FB\u6A59\u8272\u89E6\u53D1\u4EA4\u6613\uFF0C\u9700\u8981\u94B1\u5305\u786E\u8BA4\uFF0C\u9700\u8981gas\u8D39\u3002\u70B9\u51FB\u84DD\u8272\u8BFB\u5C31\u4E0D\u9700\u8981\u3002</p><p>\u5B9E\u9645\u64CD\u4F5C\uFF1Aenvironment \u9009\u62E9 injected web3\uFF0C\u8FD9\u91CC\u8FDE\u63A5 metamusk \u94B1\u5305\uFF0C\u94B1\u5305\u5565\u7F51\u7EDC\uFF0C\u5C31\u662F\u5565\u7F51\u7EDC\u3002\u63A8\u8350\u7528 goerli\uFF08eth \u6D4B\u8BD5\u7F51\uFF09,\u53BB<a href="https://goerlifaucet.com/" target="_blank" rel="noopener noreferrer">goerli faucet</a>\u7533\u8BF7\u4E00\u70B9\u6D4B\u8BD5\u5E01\u5373\u53EF\u3002\u90E8\u7F72\u524D\u4F1A\u8FDE\u63A5\u94B1\u5305\uFF0C\u7136\u540E\u5C31\u662F\u7528\u8D26\u53F7\u90E8\u7F72\u4E0A\u53BB,\u90E8\u7F72\u5B8C\u540E\u53EF\u4EE5\u53BB<a href="https://goerli.etherscan.io/" target="_blank" rel="noopener noreferrer">\u6D4B\u8BD5\u94FE\u67E5\u72B6\u6001</a>\u3002</p><p>\u90E8\u7F72\u6210\u529F\u540E\uFF0C\u70B9\u4E24\u6B21\u6A59\u8272\u89E6\u53D1\u4EA4\u6613\uFF0C\u518D\u70B9\u84DD\u8272\u53EF\u4EE5\u8BFB\u5230\u6B64\u65F6counter\u503C\u7684\u72B6\u6001\uFF0C\u63A7\u5236\u53F0\u6253\u5370\uFF1A</p><div class="language-shell"><pre><code><span class="token punctuation">{</span>
	<span class="token string">&quot;0&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;uint256: 2&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>\u6CE8\u610F remix \u4E2D\u7684 environment \u5982\u679C\u662F\u9ED8\u8BA4\u7684\uFF0C\u90A3\u5C31\u662F\u865A\u62DF\u7F51\u7EDC\uFF0C\u5728\u533A\u5757\u94FE\u6D4F\u89C8\u5668\u662F\u67E5\u4E0D\u5230\u7684\uFF0C\u800C\u4E14\u4E0D\u9700\u8981\u94B1\u5305\u9A8C\u8BC1\uFF0C\u4E5F\u4E0D\u9700\u8981gas\u8D39</p></blockquote><h3 id="_2-truffle" tabindex="-1">2. Truffle <a class="header-anchor" href="#_2-truffle" aria-hidden="true">#</a></h3><p>Truffle:\u7F16\u8BD1\u3001\u90E8\u7F72\u3001\u6D4B\u8BD5\u5408\u7EA6\u7684\u4E00\u6574\u5957\u5F00\u53D1\u5DE5\u5177</p><p>ganache\u662F\u5F00\u53D1\u533A\u5757\u94FE\uFF0C\u63D0\u4F9B\u672C\u5730\u6A21\u62DF\u7684\u94FE\u4E0A\u73AF\u5883</p><p><a href="https://trufflesuite.com/docs/truffle/" target="_blank" rel="noopener noreferrer">\u5B98\u65B9\u6587\u6863</a></p><p><a href="https://learnblockchain.cn/docs/truffle/" target="_blank" rel="noopener noreferrer">\u4E2D\u6587\u6587\u6863</a></p><p><a href="https://github.com/clark-cui/truffle-demo" target="_blank" rel="noopener noreferrer">\u6211\u7684\u4EE3\u7801</a></p><div class="language-shell"><pre><code>Truffle \u5B89\u88C5  <span class="token function">npm</span> <span class="token function">install</span> -g truffle
\u521B\u5EFA\u5DE5\u7A0B truffle init\u6216\u8005truffle unbox metacoin<span class="token punctuation">(</span>\u6211\u7528\u7684\u7B2C\u4E8C\u4E2A\uFF0C\u76F8\u5F53\u4E8E\u4F7F\u7528metacoin\u8FD9\u4E2A\u6A21\u7248\uFF0C\u6CE8\u610F\u9700\u8981\u624B\u52A8mkdir\u4E00\u4E2Afolder\uFF0C\u518D\u5728\u91CC\u9762\u6267\u884C\u521B\u5EFA\uFF0C\u6CE8\u610F\u914D\u7F6Eproxy<span class="token punctuation">)</span>
</code></pre></div><p>truffle\u5DE5\u7A0B\u5305\u542B</p><ul><li>contracts:\u667A\u80FD\u5408\u7EA6\u76EE\u5F55</li><li>migrations:\u8FC1\u79FB\u6587\u4EF6\uFF0C\u7528\u6765\u6307\u793A\u5982\u4F55\u90E8\u7F72\u667A\u80FD\u5408\u7EA6</li><li>test:\u667A\u80FD\u5408\u7EA6\u6D4B\u8BD5\u7528\u4F8B\u6587\u4EF6\u5939</li><li>truffle-config.js:\u914D\u7F6E\u6587\u4EF6\uFF0C\u914D\u7F6Etruffle\u8FDE\u63A5\u7684\u7F51\u7EDC\u53CA\u7F16\u8BD1\u9009\u9879</li><li>build:\u7F16\u8BD1\u7ED3\u679C\u76EE\u5F55</li></ul><p>\u6539\u9020\u4E0Bfolder</p><ol><li><p>\u5220\u9664contracts\u3001migrations\u3001test\u4E0B\u7684\u6587\u4EF6</p></li><li><p>contracts\u91CC\u6DFB\u52A0Counter.sol</p><div class="language-solidity"><pre><code><span class="token comment">// SPDX-License-Identifier:  MIT</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">Counter</span><span class="token punctuation">{</span>
    <span class="token builtin">uint</span> <span class="token keyword">public</span> counter<span class="token punctuation">;</span>
    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span><span class="token punctuation">{</span>
        counter<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ol><h4 id="\u5408\u7EA6\u7F16\u8BD1" tabindex="-1">\u5408\u7EA6\u7F16\u8BD1 <a class="header-anchor" href="#\u5408\u7EA6\u7F16\u8BD1" aria-hidden="true">#</a></h4><div class="language-shel"><pre><code>//\u4F7F\u7528\u547D\u4EE4
truffle compile
</code></pre></div><p>\u5728\u90A3\u4E4B\u524D\u9700\u8981\u914D\u7F6Etruffle-config.js\uFF0C\u4E0D\u914D\u7F6E\u5C31\u662F\u9ED8\u8BA4\u76840.5.16\u7248\u672C</p><div class="language-js"><pre><code>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>
  compilers<span class="token operator">:</span><span class="token punctuation">{</span>
    solc<span class="token operator">:</span><span class="token punctuation">{</span>
      version<span class="token operator">:</span><span class="token string">&quot;0.8.9&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7F16\u8BD1\u5B8C\u6210\u4F1A\u8F93\u51FA\u5728build\u76EE\u5F55,\u540C\u65F6\u4E5F\u4F1A\u5728\u547D\u4EE4\u884C\u8F93\u51FA\u7F16\u8BD1\u4F7F\u7528\u7684\u7F16\u8BD1\u5668</p><div class="language-shell"><pre><code><span class="token operator">&gt;</span> Compiled successfully using:
   - solc: <span class="token number">0.8</span>.9+commit.e5eed63a.Emscripten.clang
</code></pre></div><p>\u7F16\u8BD1\u7ED3\u679C\u662Fjson\uFF08\u4E0E\u5408\u7EA6\u4E00\u4E00\u5BF9\u5E94\uFF09\uFF0C\u91CC\u9762abi\u662F\u548C\u524D\u7AEF\u4EA4\u4E92\u7684\uFF0Cbytecode\u5C31\u662F\u6700\u540E\u90E8\u7F72\u5728\u94FE\u4E0A\u7684\u4E1C\u897F</p><h4 id="\u63A5\u4E0B\u6765\u662F\u5408\u7EA6\u7684\u90E8\u7F72" tabindex="-1">\u63A5\u4E0B\u6765\u662F\u5408\u7EA6\u7684\u90E8\u7F72 <a class="header-anchor" href="#\u63A5\u4E0B\u6765\u662F\u5408\u7EA6\u7684\u90E8\u7F72" aria-hidden="true">#</a></h4><div class="language-shell"><pre><code>//\u4F7F\u7528\u547D\u4EE4
truffle migrate
truffle migrate --network networkname //\u53EF\u4EE5\u5728\u540E\u9762\u52A0network\u53C2\u6570\u548Cnetwork\u540D\u5B57\uFF0C\u90E8\u7F72\u5230\u6307\u5B9Anetwork
</code></pre></div><p>\u5728\u90A3\u4E4B\u524D\uFF0C\u9700\u8981\u5148\u5199\u597D\u914D\u7F6E\u6587\u4EF6</p><ol><li><p>\u7F16\u5199\u90E8\u7F72\u811A\u672C</p><p>migrations\u91CC\u6DFB\u52A01_counter.js</p><div class="language-js"><pre><code><span class="token keyword">const</span> Counter <span class="token operator">=</span> artifacts<span class="token punctuation">.</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">deployer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  deployer<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span>Counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>\u90E8\u7F72\u5230\u672C\u5730\u8282\u70B9\uFF08\u6211\u6CA1\u6709\u641E\uFF09</p><ol><li><p>\u5148\u542F\u52A8\u4E00\u4E2A\u670D\u52A1\u6A21\u62DF\u94FE\u4E0A\u73AF\u5883<code>ganache-cli -p 7545</code>(ganache\u662F\u5F00\u53D1\u533A\u5757\u94FE\uFF0C\u63D0\u4F9B\u672C\u5730\u6A21\u62DF\u7684\u94FE\u4E0A\u73AF\u5883)</p></li><li><p>\u7136\u540E\u6DFB\u52A0dev\u7684network</p><div class="language-js"><pre><code><span class="token comment">//truffle-config.js development\u7F51\u7EDC\u914D\u7F6E</span>

module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>
  networks<span class="token operator">:</span><span class="token punctuation">{</span>
    development<span class="token operator">:</span><span class="token punctuation">{</span>
      host<span class="token operator">:</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
      port<span class="token operator">:</span><span class="token number">7545</span><span class="token punctuation">,</span>
   		network_id<span class="token operator">:</span><span class="token string">&quot;*&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p><code>truffle migrate \u2014 network development</code>\u90E8\u7F72\uFF0C\u672C\u5730\u90E8\u7F72\uFF0C\u4E0D\u9700\u8981\u9A8C\u8BC1\u548Cgas\u8D39</p></li></ol></li><li><p>\u90E8\u7F72\u5230\u94FE\u4E0A</p><ol><li><p>\u9700\u8981\u90E8\u7F72\u5230\u94FE\u4E0A\u7684\u8282\u70B9\uFF0C\u6240\u4EE5\u5148\u53BB<a href="https://infura.io/" target="_blank" rel="noopener noreferrer">infura.io</a>\u521B\u5EFA\u4E00\u4E2Aproject\uFF0C\u7136\u540Ecopy project id\uFF08\u9009\u62E9endpoints\u662Fgoerli\uFF09</p></li><li><p>\u5F53\u524D\u76EE\u5F55\u65B0\u5EFA\u4E24\u4E2A\u9690\u85CF\u6587\u4EF6\uFF0C.api_key\u548C.mnemonic\uFF0C.gitignore\u8981\u6DFB\u52A0\u8FD9\u4E24\u9879\uFF0C\u5206\u522B\u5B58\u50A8\u4E0A\u4E00\u6B65\u7684id\u548C\u4F60\u7684\u94B1\u5305\u8D26\u6237\u52A9\u8BB0\u8BCD\uFF08\u4E3B\u8981\u4E3A\u4E86\u9632\u6B62\u5916\u6CC4\uFF09</p></li><li><p>\u521D\u59CB\u5316npm \uFF0C\u6DFB\u52A0truffle-hdwallet-provider\u5305</p><div class="language-shell"><pre><code><span class="token function">npm</span> init
<span class="token function">npm</span> i truffle-hdwallet-provider -s
.gitignore \u6DFB\u52A0node_modules
</code></pre></div></li><li><p>config.js\u91CC\u7684network\u91CC\u6DFB\u52A0\u65B0\u7684network goerli</p><div class="language-js"><pre><code><span class="token keyword">const</span> HDWalletProvider <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;truffle-hdwallet-provider&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> api_key <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;.api_key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mnemonic <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;.mnemonic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  networks<span class="token operator">:</span> <span class="token punctuation">{</span>
    goerli<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">provider</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HDWalletProvider</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">,</span> <span class="token string">&#39;https://goerli.infura.io/v3/&#39;</span> <span class="token operator">+</span> api_key<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      network_id<span class="token operator">:</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span>
      gas<span class="token operator">:</span> <span class="token number">4465030</span><span class="token punctuation">,</span>
      gasPrice<span class="token operator">:</span> <span class="token number">10000000000</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>\u6267\u884C<code>truffle migrate \u2014 network goerli</code>\u90E8\u7F72\u5230goerli\uFF0C\u8FD9\u91CC\u4F1A\u6D88\u8017gas\u8D39\uFF0C\u4F46\u6CA1\u6709metamusk\u5F39\u7A97\u786E\u8BA4\u7684\u8FC7\u7A0B\uFF0C\u56E0\u4E3A\u6211\u8F93\u5165\u4E86\u52A9\u8BB0\u8BCD\uFF0C\u4ED6\u76F4\u63A5\u5728\u94B1\u5305\u6263\u6B3E\u4E86</p><div class="language-shell"><pre><code>//\u547D\u4EE4\u884C\u8F93\u51FA
Compiling your contracts<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token operator">&gt;</span> Everything is up to date, there is nothing to compile.


Migrations dry-run <span class="token punctuation">(</span>simulation<span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token operator">&gt;</span> Network name:    <span class="token string">&#39;goerli-fork&#39;</span>
<span class="token operator">&gt;</span> Network id:      <span class="token number">5</span>
<span class="token operator">&gt;</span> Block gas limit: <span class="token number">30000000</span> <span class="token punctuation">(</span>0x1c9c380<span class="token punctuation">)</span>


1_counter.js
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>

   Deploying <span class="token string">&#39;Counter&#39;</span>
   -------------------
   <span class="token operator">&gt;</span> block number:        <span class="token number">6818292</span>
   <span class="token operator">&gt;</span> block timestamp:     <span class="token number">1651505825</span>
   <span class="token operator">&gt;</span> account:             0x736D76f4C2d4b4CCced0CCA92d3dF0F0e456F35D
   <span class="token operator">&gt;</span> balance:             <span class="token number">0.04813429249775099</span>
   <span class="token operator">&gt;</span> gas used:            <span class="token number">135269</span> <span class="token punctuation">(</span>0x21065<span class="token punctuation">)</span>
   <span class="token operator">&gt;</span> gas price:           <span class="token number">10</span> gwei
   <span class="token operator">&gt;</span> value sent:          <span class="token number">0</span> ETH
   <span class="token operator">&gt;</span> total cost:          <span class="token number">0.00135269</span> ETH

   -------------------------------------
   <span class="token operator">&gt;</span> Total cost:          <span class="token number">0.00135269</span> ETH

Summary
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token operator">&gt;</span> Total deployments:   <span class="token number">1</span>
<span class="token operator">&gt;</span> Final cost:          <span class="token number">0.00135269</span> ETH




Starting migrations<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
<span class="token operator">&gt;</span> Network name:    <span class="token string">&#39;goerli&#39;</span>
<span class="token operator">&gt;</span> Network id:      <span class="token number">5</span>
<span class="token operator">&gt;</span> Block gas limit: <span class="token number">29970705</span> <span class="token punctuation">(</span>0x1c95111<span class="token punctuation">)</span>


1_counter.js
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>

   Deploying <span class="token string">&#39;Counter&#39;</span>
   -------------------
   <span class="token operator">&gt;</span> transaction hash:    0x376710e125c35233b468bd232444acc2239c38e837aeecf9ef9de6762715eca8
   <span class="token operator">&gt;</span> Blocks: <span class="token number">0</span>            Seconds: <span class="token number">5</span>
   <span class="token operator">&gt;</span> contract address:    0xAc8dC14e7aC85556Bcc22c052FbB5Bc05D4E77D8
   <span class="token operator">&gt;</span> block number:        <span class="token number">6818298</span>
   <span class="token operator">&gt;</span> block timestamp:     <span class="token number">1651505843</span>
   <span class="token operator">&gt;</span> account:             0x736D76f4C2d4b4CCced0CCA92d3dF0F0e456F35D
   <span class="token operator">&gt;</span> balance:             <span class="token number">0.04813429249775099</span>
   <span class="token operator">&gt;</span> gas used:            <span class="token number">135269</span> <span class="token punctuation">(</span>0x21065<span class="token punctuation">)</span>
   <span class="token operator">&gt;</span> gas price:           <span class="token number">10</span> gwei
   <span class="token operator">&gt;</span> value sent:          <span class="token number">0</span> ETH
   <span class="token operator">&gt;</span> total cost:          <span class="token number">0.00135269</span> ETH

   <span class="token operator">&gt;</span> Saving artifacts
   -------------------------------------
   <span class="token operator">&gt;</span> Total cost:          <span class="token number">0.00135269</span> ETH

Summary
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token operator">&gt;</span> Total deployments:   <span class="token number">1</span>
<span class="token operator">&gt;</span> Final cost:          <span class="token number">0.00135269</span> ETH


</code></pre></div></li></ol></li></ol><h4 id="\u8865\u5145\u5185\u5BB9" tabindex="-1">\u8865\u5145\u5185\u5BB9 <a class="header-anchor" href="#\u8865\u5145\u5185\u5BB9" aria-hidden="true">#</a></h4><ol><li><p>Truffle console\u4F7F\u7528\uFF08\u53EF\u4EE5\u76F4\u63A5\u5728\u63A7\u5236\u53F0\u8C03\u7528\u5408\u7EA6\uFF09</p><p>\u5148\u628A\u5408\u7EA6\u90E8\u7F72\u5230development</p><p><code>truffle console --network development</code>\u5F00\u542F\u8C03\u7528\u6A21\u5F0F</p></li><li><p><a href="http://truffle-min.sh" target="_blank" rel="noopener noreferrer">truffle-min.sh</a>(\u538B\u7F29artifacts\u6587\u4EF6)</p><p>\u6211\u4EECcompile\u540E\uFF0C\u662F\u4F1A\u5728build\u91CC\u8F93\u51FA\u4E00\u4E2Ajson\uFF0C\u4F46\u662F\u8FD9\u4E2Ajson\u5F88\u5927\uFF0C\u6240\u4EE5\u53EF\u4EE5\u501F\u52A9\u8FD9\u4E2A\u811A\u672C\u6765\u5BF9\u8FD9\u4E2Ajson\u8FDB\u884C\u538B\u7F29\uFF0C\u53EF\u4EE5\u4ECE\u51E0\u5343\u884C\u538B\u7F29\u5230\u51E0\u5341\u884C\uFF0C\u7136\u540E\u6211\u4EEC\u540E\u7EED\u7684\u5F00\u53D1\u6709\u5F15\u7528\u8FD9\u4E2Ajson\u7684\u9700\u6C42\u7684\u65F6\u5019\uFF0C\u5C31\u53EF\u4EE5\u5F15\u5165\u8FD9\u4E2A\u538B\u7F29\u7684json</p></li></ol><h3 id="_3-hardhat" tabindex="-1">3. Hardhat <a class="header-anchor" href="#_3-hardhat" aria-hidden="true">#</a></h3><p>Hardhat:\u7F16\u8BD1\u3001\u90E8\u7F72\u3001\u6D4B\u8BD5\u548C\u8C03\u8BD5\u4EE5\u592A\u574A\u5E94\u7528\u7684\u5F00\u53D1\u73AF\u5883\uFF0C\u56F4\u7ED5task\uFF08\u4EFB\u52A1\uFF09\u548Cplugins\uFF08\u63D2\u4EF6\uFF09\u6982\u5FF5\u8BBE\u8BA1</p><p>\u5728\u547D\u4EE4\u884C\u8FD0\u884CHardhat\u65F6\uFF0C\u90FD\u662F\u5728\u8FD0\u884C\u4EFB\u52A1\uFF0C\u4F8B\u5982\uFF1Anpx hardhat compile\u5C31\u662F\u8FD0\u884Ccompile\u4EFB\u52A1</p><p>Hardhat node:\u5F00\u53D1\u533A\u5757\u94FE\uFF0C\u63D0\u4F9B\u672C\u5730\u6A21\u62DF\u7684\u94FE\u4E0A\u73AF\u5883</p><p><a href="https://hardhat.org/getting-started/" target="_blank" rel="noopener noreferrer">\u5B98\u65B9\u6587\u6863</a>,<a href="https://learnblockchain.cn/docs/hardhat/getting-started/" target="_blank" rel="noopener noreferrer">\u4E2D\u6587\u6587\u6863</a></p><p><a href="https://github.com/NomicFoundation/hardhat-hackathon-boilerplate" target="_blank" rel="noopener noreferrer">\u53C2\u8003\u4EE3\u7801</a></p><p><a href="https://github.com/clark-cui/hardhat-demo" target="_blank" rel="noopener noreferrer">\u6211\u7684\u4EE3\u7801</a></p><h4 id="\u521B\u5EFA\u5DE5\u7A0B" tabindex="-1">\u521B\u5EFA\u5DE5\u7A0B <a class="header-anchor" href="#\u521B\u5EFA\u5DE5\u7A0B" aria-hidden="true">#</a></h4><div class="language-shell"><pre><code><span class="token function">mkdir</span> hardhat-demo //\u521B\u5EFA\u4E00\u4E2Afolder
<span class="token builtin class-name">cd</span> hardhat-demo
<span class="token function">npm</span> init //\u521D\u59CB\u5316npm
<span class="token function">npm</span> i -s hardhat //\u5F53\u524D\u76EE\u5F55\u4E0B\u5B89\u88C5hardhat
npx hardhat //\u5728\u5F53\u524D\u76EE\u5F55\u4E0B\u521B\u5EFA\u9879\u76EE,\u53EF\u4EE5\u9009basic-sample<span class="token punctuation">(</span>\u6CE8\u610F\uFF0C\u8FD9\u4E00\u6B65\u8981\u5F00\u542Fshell proxy<span class="token punctuation">)</span>
</code></pre></div><p>contracts\u91CC\u65B0\u5EFACounter.sol\uFF0C\u6DFB\u52A0\u4E00\u4E0B\u5185\u5BB9</p><div class="language-solidity"><pre><code><span class="token comment">// SPDX-License-Identifier:  MIT</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;hardhat/console.sol&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">Counter</span><span class="token punctuation">{</span>
    <span class="token builtin">uint</span> <span class="token keyword">public</span> counter<span class="token punctuation">;</span>
    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span><span class="token punctuation">{</span>
        counter<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;curr counter:&quot;</span><span class="token punctuation">,</span>counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token builtin">uint</span> x<span class="token punctuation">)</span> <span class="token keyword">public</span><span class="token punctuation">{</span>
        counter<span class="token operator">=</span>counter<span class="token operator">+</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u5408\u7EA6\u7F16\u8BD1-1" tabindex="-1">\u5408\u7EA6\u7F16\u8BD1 <a class="header-anchor" href="#\u5408\u7EA6\u7F16\u8BD1-1" aria-hidden="true">#</a></h4><div class="language-js"><pre><code><span class="token comment">//\u5148\u4FEE\u6539hardhat.config.js\uFF0C\u8BBE\u7F6E\u7F16\u8BD1\u5668\u7248\u672C</span>
module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>
  Solidity<span class="token operator">:</span><span class="token string">&quot;0.8.9&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u7136\u540E\u547D\u4EE4\u884C\u8F93\u5165</span>
npx hardhat compile 
</code></pre></div><h4 id="\u90E8\u7F72" tabindex="-1">\u90E8\u7F72 <a class="header-anchor" href="#\u90E8\u7F72" aria-hidden="true">#</a></h4><ol><li><p>\u7F16\u5199\u90E8\u7F72\u811A\u672C</p><div class="language-js"><pre><code><span class="token comment">//scripts/deploy_counter.js</span>
<span class="token keyword">const</span> hre <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//await hre.run(&#39;compile&#39;);</span>
  <span class="token keyword">const</span> Counter <span class="token operator">=</span> <span class="token keyword">await</span> hre<span class="token punctuation">.</span>ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token keyword">await</span> Counter<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//deploy\u91CC\u7684\u62EC\u53F7\u53EF\u4EE5\u4F20\u53C2\uFF0C\u5177\u4F53\u770B\u5408\u7EA6\u91CC\u7684construtor\u6709\u6CA1\u6709\u53C2\u6570\u800C\u5B9A</span>

  <span class="token keyword">await</span> counter<span class="token punctuation">.</span><span class="token function">deployed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Counter deployed to:&quot;</span><span class="token punctuation">,</span> counter<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><p>\u5982\u679C\u60F3\u8981\u4E00\u6B21\u90E8\u7F72\u591A\u4E2A\u5408\u7EA6\uFF0C\u6BD4\u5982\u8FD9\u91CC\u6709counter\u548Cgreeter\u5408\u7EA6\uFF0C\u90A3\u4E48\u53EF\u4EE5\u8FD9\u4E48\u5199</p><div class="language-js"><pre><code><span class="token comment">//scripts/deploy.js</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> ethers <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>deployer<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getSigners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Deploying contracts with the account: &#39;</span> <span class="token operator">+</span> deployer<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Deploy Greeter</span>
  <span class="token keyword">const</span> Greeter <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">&quot;Greeter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> greeter <span class="token operator">=</span> <span class="token keyword">await</span> Greeter<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, Hardhat!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


  <span class="token comment">// Deploy Counter</span>
  <span class="token keyword">const</span> Counter <span class="token operator">=</span> <span class="token keyword">await</span> hre<span class="token punctuation">.</span>ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token keyword">await</span> Counter<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">// console.log</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Greeter deployed to:&quot;</span><span class="token punctuation">,</span> greeter<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Counter deployed to:&quot;</span><span class="token punctuation">,</span> counter<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div></li><li><p>\u90E8\u7F72\u5230\u672C\u5730\u7F51\u7EDC</p><p>\u5148\u542F\u52A8\u4E00\u4E2A\u672C\u5730\u7F51\u7EDC<code>npx hardhat node</code>,\u7136\u540E\u518D\u6839\u636E\u7AEF\u53E3\u503C\u6765\u4FEE\u6539hardhat.config.js\uFF0C\u589E\u52A0\u4EE5\u4E0B\u5185\u5BB9</p><div class="language-js"><pre><code><span class="token comment">//hardhat.config.js</span>
module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>
  networks<span class="token operator">:</span><span class="token punctuation">{</span>
    development<span class="token operator">:</span><span class="token punctuation">{</span>
      url<span class="token operator">:</span><span class="token string">&quot;http://127.0.0.1:8545&quot;</span><span class="token punctuation">,</span>
      chainId<span class="token operator">:</span><span class="token number">31337</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6267\u884C\u90E8\u7F72<code>npx hardhat run scripts/deploy_xxx.js [--network \u7F51\u7EDC]</code>\uFF0C\u800C\u8FD9\u91CC\u7684\u8BDD\uFF0C\u5C31\u662F\u6267\u884C<code>npx hardhat run scripts/deploy_counter.js --network development</code></p></li><li><p>\u90E8\u7F72\u5230\u94FE\u4E0A</p><p>\u9700\u8981\u90E8\u7F72\u5230\u94FE\u4E0A\u7684\u8282\u70B9\uFF0C\u6240\u4EE5\u5148\u53BB<a href="https://infura.io/" target="_blank" rel="noopener noreferrer">infura.io</a>\u521B\u5EFA\u4E00\u4E2Aproject\uFF0C\u7136\u540Ecopy project id\uFF08\u9009\u62E9endpoints\u662Fgoerli\uFF09</p><p>\u672C\u5730\u6DFB\u52A0.api_key\u548C.mnemonic\uFF0C.gitignore\u6DFB\u52A0\u8FC7\u6EE4\u8FD9\u4E24\u9879\uFF0C\u7136\u540E\u4FEE\u6539hardhat.config.js,\u589E\u52A0\u4EE5\u4E0B\u5185\u5BB9</p><div class="language-js"><pre><code><span class="token comment">//hardhat.config.js</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> api_key <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;.api_key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mnemonic <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;.mnemonic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>
  networks<span class="token operator">:</span><span class="token punctuation">{</span>
    goerli<span class="token operator">:</span><span class="token punctuation">{</span>
      url<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://goerli.infura.io/v3/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>api_key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      accounts<span class="token operator">:</span><span class="token punctuation">{</span>
        mnemonic<span class="token operator">:</span>mnemonic<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ol><p>\u200B \u6267\u884C\u90E8\u7F72<code>npx hardhat run scripts/deploy.js --network goerli</code></p><h4 id="\u6D4B\u8BD5" tabindex="-1">\u6D4B\u8BD5 <a class="header-anchor" href="#\u6D4B\u8BD5" aria-hidden="true">#</a></h4><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>expect<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;chai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>ethers<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;counter should be 0 when init , be added 1 after count be called, be added x after add be called with x&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> Counter <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> counterInstance <span class="token operator">=</span> <span class="token keyword">await</span> Counter<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> counterInstance<span class="token punctuation">.</span><span class="token function">deployed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> counterInstance<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> setCountTx <span class="token operator">=</span> <span class="token keyword">await</span> counterInstance<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// wait until the transaction is mined</span>
    <span class="token keyword">await</span> setCountTx<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> counterInstance<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> addCountTx <span class="token operator">=</span> <span class="token keyword">await</span> counterInstance<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> addCountTx<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> counterInstance<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>npx hardhat test</code>\u6267\u884C\u6D4B\u8BD5</p><h4 id="\u5B9E\u6218" tabindex="-1">\u5B9E\u6218 <a class="header-anchor" href="#\u5B9E\u6218" aria-hidden="true">#</a></h4><ol><li><p>\u8C03\u8BD5\u5229\u5668\uFF1Aconsole.log</p><div class="language-solidity"><pre><code><span class="token keyword">import</span> <span class="token string">&quot;hardhat/console.sol&quot;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>\u7075\u6D3B\u53C2\u6570\u90E8\u7F72\uFF0C\u5229\u7528hardhat\u53EF\u4EE5\u5728\u4EE3\u7801\u4E2D\u5F15\u7528(\u8FD9\u91CC\u503C\u7684\u662F\u5408\u7EA6\u521D\u59CB\u5316\u7684\u53C2\u6570\uFF0C\u4E5F\u5C31\u662Fconstructor\u9700\u8981\u7684\u53C2\u6570\uFF0C\u6BD4\u5982Greeter\u5408\u7EA6\uFF0C\u8FD9\u91CC\u53EF\u4EE5\u5728\u90E8\u7F72\u811A\u672C\u91CC\u4F20\u5165\u53C2\u6570\uFF0C\u6BD4\u5982deploy_greeter.js\u6240\u5199\u3002\u4E5F\u53EF\u4EE5\u7528nodejs\u7684\u65B9\u5F0F\uFF0C\u5728\u547D\u4EE4\u884C\u4F20\u5165\u53C2\u6570,\u7136\u540E\u5728\u90E8\u7F72\u811A\u672C\u91CC\u53D6\u51FA\u6765)</p><ol><li><div class="language-solidity"><pre><code><span class="token comment">// Counter.sol</span>
<span class="token comment">// SPDX-License-Identifier:  MIT</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;hardhat/console.sol&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">Counter</span><span class="token punctuation">{</span>
    <span class="token builtin">uint</span> <span class="token keyword">public</span> counter<span class="token punctuation">;</span>
    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token builtin">uint</span> _counter<span class="token punctuation">)</span><span class="token punctuation">{</span>
        counter <span class="token operator">=</span> _counter<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span><span class="token punctuation">{</span>
        counter<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;curr counter:&quot;</span><span class="token punctuation">,</span>counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token builtin">uint</span> x<span class="token punctuation">)</span> <span class="token keyword">public</span><span class="token punctuation">{</span>
        counter<span class="token operator">=</span>counter<span class="token operator">+</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// test_counter.js</span>
const <span class="token punctuation">{</span>expect<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;chai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
const <span class="token punctuation">{</span>ethers<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;counter should be 0 when init , be added 1 after count be called, be added x after add be called with x&quot;</span><span class="token punctuation">,</span> async <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    const Counter <span class="token operator">=</span> await ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    const counterInstance <span class="token operator">=</span> await Counter<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    await counterInstance<span class="token punctuation">.</span><span class="token function">deployed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>await counterInstance<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    const setCountTx <span class="token operator">=</span> await counterInstance<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// wait until the transaction is mined</span>
    await setCountTx<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>await counterInstance<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    const addCountTx <span class="token operator">=</span> await counterInstance<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    await addCountTx<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>await counterInstance<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//deploy_counter.js</span>
<span class="token comment">//\u5176\u4F59\u76F8\u540C\uFF0C\u53EA\u9700\u6539\u4E0B\u9762\u8FD9\u4E00\u53E5</span>
 const counter <span class="token operator">=</span> await Counter<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div></li><li><p>\u8BBE\u7F6Edeploy\u811A\u672C</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>ethers<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> params<span class="token operator">=</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">;</span>
<span class="token keyword">const</span> value<span class="token operator">=</span>params<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Counter deploy with value:&quot;</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//await hre.run(&#39;compile&#39;);</span>
  <span class="token keyword">const</span> Counter <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token keyword">await</span> Counter<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> counter<span class="token punctuation">.</span><span class="token function">deployed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Counter deployed to:&quot;</span><span class="token punctuation">,</span> counter<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</code></pre></div></li><li><p>\u6267\u884Cnode\u811A\u672C,\u5E76\u4F20\u9012\u53C2\u6570</p><p>\u9700\u8981\u4E24\u4E2A\u547D\u4EE4\uFF0C\u53EF\u4EE5\u5728\u547D\u4EE4\u884C\u4F9D\u6B21\u6267\u884C\uFF0C<a href="http://xn--4gqvdzgque2iqseq47a.sh" target="_blank" rel="noopener noreferrer">\u4E5F\u53EF\u4EE5\u5199\u6210\u4E00\u4E2A.sh</a>\uFF0C<code>sh ./deploy_by_param.sh </code>\u6267\u884C\u8FD9\u4E2A.sh\u5373\u53EF</p><div class="language-shell"><pre><code>// ./deploy_by_param.sh
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HARDHAT_NETWORK</span><span class="token operator">=</span><span class="token string">&#39;development&#39;</span> //\u8BBE\u7F6Enetwork\u7684\u503C\u662Fdevelopment\uFF1B\u8FD9\u5C31\u662Fnode\u6267\u884Chardhat\u811A\u672C\u9644\u7740hardhat\u53C2\u6570\u7684\u65B9\u5F0F+
node scripts/deploy_by_param.js <span class="token number">10</span> //\u5728\u8FD9\u91CC\u4F20\u5165\u521D\u59CB\u5316\u53C2\u6570\u662F10
</code></pre></div></li></ol></li><li><p>\u4EE3\u7801\u6241\u5E73\uFF1A<code>npx hardhat flatten xxx.sol &gt; xxx.sol</code></p><p>\u672C\u8D28\u7684\u610F\u4E49\u662F\uFF0C\u5F53\u4E00\u4E2A\u5408\u7EA6\u7684\u91CC\u9762\u6709import\u5F15\u7528\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u7528\u8FD9\u4E2A\u547D\u4EE4\u628A\u5F15\u7528\u7684\u4EE3\u7801\u548C\u672C\u8EAB\u7684\u4EE3\u7801\u653E\u5728\u4E00\u8D77\uFF0C\u65B9\u4FBF\u770B\uFF0C\u8FD9\u91CC\u7684\u8BDD\u5C31\u662F<code>npx hardhat flatten contracts/Counter.sol &gt;&gt;Counter.sol</code></p></li><li><p>\u4EE3\u7801\u9A8C\u8BC1</p><p>\u5F53\u5408\u7EA6\u90E8\u7F72\u5728\u94FE\u4E0A\u540E\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A\u547D\u4EE4\u6765\u5BF9\u4EE3\u7801\u8FDB\u884C\u9A8C\u8BC1</p><div class="language-shell"><pre><code><span class="token number">1</span>.\u5148\u5B89\u88C5 <span class="token function">npm</span> i hardhat-etherscan --dev
<span class="token number">2</span>.hardhat.config.js\u91CC\u6DFB\u52A0require<span class="token punctuation">(</span><span class="token string">&quot;@nomiclabs/hardhat-etherscan&quot;</span><span class="token punctuation">)</span>
<span class="token number">3</span>.\u6DFB\u52A0scankey,const <span class="token assign-left variable">scankey</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>$<span class="token punctuation">{</span>scanKey<span class="token punctuation">}</span><span class="token variable">\`</span></span><span class="token punctuation">;</span> //\u56E0\u4E3A\u8C03\u7528etherscan\u7684api\uFF0C\u6240\u4EE5\u9700\u8981\u53BB\u4ED6\u90A3\u91CC\u7533\u8BF7\u4E00\u4E2Akey, https://etherscan.io/,\u8FD9\u4E2Akey\u6700\u597D\u4E5F\u7528\u9690\u85CF\u6587\u4EF6\uFF0C\u4E0D\u8981\u66B4\u9732\u51FA\u53BB
<span class="token number">4</span>.\u5728\u914D\u7F6E\u91CC\uFF0Cnetworks\u7684\u4E0B\u9762\uFF0C\u6DFB\u52A0\u540C\u7EA7\u9879 etherscan:<span class="token punctuation">{</span>apiKey:scankey<span class="token punctuation">}</span>
<span class="token number">5</span>.\u547D\u4EE4\u884C\u6267\u884Cnpx hardhat verify address --network xxx // address\u662F\u5408\u7EA6\u7684\u90E8\u7F72\u5730\u5740\uFF0Cxxx\u662F\u8981\u9A8C\u8BC1\u7684\u7F51\u7EDC
</code></pre></div></li><li><p>ABI\u5BFC\u51FA</p><p>\u5F53\u5408\u7EA6\u90E8\u7F72\u540E\uFF0C\u9700\u8981\u5BFC\u51FAABI\u4F9B\u524D\u7AEF\u8C03\u7528\uFF0C\u9ED8\u8BA4\u7684deploy\u5C31\u4F1A\u5BFC\u51FA\u4E00\u4E2A\u603B\u7684json\u91CC\u9762\u5305\u62ECabi\uFF0C\u4E0D\u8FC7\u6BD4\u8F83\u5927\u800C\u5DF2\uFF0C\u8FD9\u91CC\u662F\u4EC5\u5BFC\u51FAabi\u7684json</p><div class="language-shell"><pre><code><span class="token number">1</span>.\u5148\u5B89\u88C5 <span class="token function">npm</span> i hardhat-abi-exporter --dev
<span class="token number">2</span>.hardhat.config.js\u91CC\u6DFB\u52A0require<span class="token punctuation">(</span><span class="token string">&quot;hardhat-abi-exporter&quot;</span><span class="token punctuation">)</span>
<span class="token number">3</span>.hardhat.config.js\u91CC\u914D\u7F6E\u4E0B\u5BFC\u51FA,\u65B0\u5EFA./abi\u76EE\u5F55\u6765\u5B58\u653E
  abiExporter: <span class="token punctuation">{</span>
    path: <span class="token string">&#39;./abi&#39;</span>,
    runOnCompile: true,
    clear: true,
    flat: true,
    spacing: <span class="token number">2</span>,
    pretty: false,
  <span class="token punctuation">}</span>
<span class="token number">4</span>.npx hardhat export-abi
</code></pre></div></li><li><p>\u81EA\u5B9A\u4E49Task</p><p>\u5728hardhat.config.js\u91CC\u53EF\u4EE5\u5199task,\u7136\u540E\u901A\u8FC7<code>npx hardhat taskName</code>\u5B8C\u6210\u4E00\u4E9B\u60F3\u8981\u505A\u7684\u4E8B\uFF0C\u4E5F\u53EF\u4EE5\u5728task\u6587\u4EF6\u5939\u91CC\u5199\uFF0C\u7136\u540E\u5728hardhat.config.js\u7528require\u5F15\u5165</p><div class="language-js"><pre><code><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Prints the list of accounts&quot;</span><span class="token punctuation">,</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token parameter">taskArgs<span class="token punctuation">,</span>hre</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> accounts <span class="token operator">=</span><span class="token keyword">await</span> hre<span class="token punctuation">.</span>ethers<span class="token punctuation">.</span><span class="token function">getSigners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> account <span class="token keyword">of</span> accounts<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span>address<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//\u547D\u4EE4\u884C npx hardhat accounts\u6267\u884C</span>
</code></pre></div></li><li><p>\u4E66\u5199\u811A\u672C\u53BB\u8C03\u7528\u5408\u7EA6\uFF0C\u5B9E\u73B0\u524D\u7AEF\u4E0E\u5408\u7EA6\u7684\u4EA4\u4E92</p><ol><li><p>\u524D\u7AEF\u60F3\u8981\u8C03\u7528\u5408\u7EA6\uFF0C\u90A3\u5C31\u5F97\u77E5\u9053\u5408\u7EA6\u7684\u5730\u5740\u548Cabi\uFF0C\u4E4B\u524D\u6709\u7528npm\u5904\u7406\u4E86abi\u7684\u5355\u72EC\u5BFC\u51FA\uFF0C\u4F46\u662F\u5E76\u6CA1\u6709\u5904\u7406\u5408\u7EA6\u7684\u5730\u5740\uFF0C\u6240\u4EE5\u8FD9\u91CC\u6211\u4EEC\u6539\u9020\u4E0Bdeploy\u811A\u672C\uFF0C\u8BA9\u5B83\u81EA\u52A8\u4FDD\u5B58\u5730\u5740\u548Cabi\u5230\u4E00\u4E2Adata\u7684\u76EE\u5F55\u4E0B</p><div class="language-js"><pre><code><span class="token comment">// scripts/deploy_counter.js</span>
<span class="token keyword">const</span> hre <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//await hre.run(&#39;compile&#39;);</span>
  <span class="token keyword">const</span> Counter <span class="token operator">=</span> <span class="token keyword">await</span> hre<span class="token punctuation">.</span>ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token keyword">await</span> Counter<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> counter<span class="token punctuation">.</span><span class="token function">deployed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Counter deployed to:&quot;</span><span class="token punctuation">,</span> counter<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">saveFrontendFiles</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">saveFrontendFiles</span><span class="token punctuation">(</span><span class="token parameter">counter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> contractsDir <span class="token operator">=</span> <span class="token string">&quot;./data&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>contractsDir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>contractsDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>
    contractsDir <span class="token operator">+</span> <span class="token string">&quot;/contract-address.json&quot;</span><span class="token punctuation">,</span>
    <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      Counter<span class="token operator">:</span> counter<span class="token punctuation">.</span>address
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> CounterArtifact <span class="token operator">=</span> artifacts<span class="token punctuation">.</span><span class="token function">readArtifactSync</span><span class="token punctuation">(</span><span class="token string">&quot;Counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>
    contractsDir <span class="token operator">+</span> <span class="token string">&quot;/Counter.json&quot;</span><span class="token punctuation">,</span>
    <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>CounterArtifact<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u7136\u540E\u6267\u884C\u811A\u672C npx hardhat run scripts/deploy_counter.js --network development</span>
</code></pre></div></li><li><p>\u65B0\u5EFAaction.js\u5B9E\u73B0\u524D\u7AEF\u8C03\u7528\u5408\u7EA6\u7684\u903B\u8F91</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>
  ethers
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> CounterArtifact <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../data/Counter.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> contractAddress <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../data/contract-address.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// init</span>
  <span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>providers<span class="token punctuation">.</span>JsonRpcProvider</span><span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:8545/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Then, we initialize the contract using that provider and the token&#39;s</span>
  <span class="token comment">// artifact. You can do this same thing with your contracts.</span>
  <span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>Contract</span><span class="token punctuation">(</span>
    contractAddress<span class="token punctuation">.</span>Counter<span class="token punctuation">,</span>
    CounterArtifact<span class="token punctuation">.</span>abi<span class="token punctuation">,</span>
    provider<span class="token punctuation">.</span><span class="token function">getSigner</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;counter\u503C\u662F\uFF1A&quot;</span><span class="token punctuation">,</span><span class="token keyword">await</span> counter<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">await</span> counter<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;counter\u503C\u662F\uFF1A&quot;</span><span class="token punctuation">,</span><span class="token keyword">await</span> counter<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div></li></ol></li></ol>`,74),e=[o];function c(u,l,i,r,k,d){return a(),s("div",null,e)}var g=n(p,[["render",c]]);export{f as __pageData,g as default};
